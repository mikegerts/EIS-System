@model EIS.Inventory.Core.ViewModels.VendorDto

@{
    ViewBag.ActiveMenu = "vendors";
    ViewBag.Title = "Create vendor";

    var regionid = ViewBag.currenRegionId;
    var order = ViewBag.currentOrder;
    var countryid = ViewBag.currenCountryId;
}

<div class="content-wrapper" style="min-height: 349px;">
    <section class="content-header">
        <h1>
            Vendor Information <small>Create vendor</small>
        </h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header">
                    </div>
                    <!-- form start -->
                    @using (Html.BeginForm("Create", "Vendor", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="box-body">
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SKUCodeStart, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.SKUCodeStart, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SKUCodeStart, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CreditTerm, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CreditTerm, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CreditTerm, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompanyOrders, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => order, (IEnumerable<SelectListItem>)ViewBag.companyOrderList, "-- Select company order --", new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Country</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => countryid, (IEnumerable<SelectListItem>)ViewBag.countryList, "-- Select countries --", new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.MiddleInitial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">State/Region</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => regionid, (IEnumerable<SelectListItem>)ViewBag.regionList, "-- Select regions --", new { @class = "form-control", @required = "required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save vendor">Save Vendor</button>&nbsp;
                                        @Html.ActionLink("Cancel", "index", new { page = 1, pageSize = 10 }, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to vendor list" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                        </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            $("#countryid").change(function ()
            {
                if ($("#countryid option:selected").val() !== "" && $("#countryid option:selected").val() !== undefined)
                {
                    $.get("/Vendor/GetRegionsByCountry?countryId=" + $("#countryid option:selected").val(), function (data)
                    {
                        var regions = $("#regionid");
                        // Clear drop down list
                        $(regions).html("");

                        $("<option />", {
                            val: "",
                            text: "-- Select regions --"
                        }).appendTo(regions);

                        $.each(data, function ()
                        {
                            $("<option />", {
                                val: this.Id,
                                text: this.Name
                            }).appendTo(regions);
                        });
                    });
                } else {
                    var regions = $("#regionid");
                    // Clear drop down list
                    $(regions).html("");

                    $("<option />", {
                        val: "",
                        text: "-- Select regions --"
                    }).appendTo(regions);
                }
            });
        });
    </script>
}