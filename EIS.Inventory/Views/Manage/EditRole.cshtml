@model EIS.Inventory.Models.RoleViewModel

@{
    ViewBag.ActiveMenu = "roles";
    ViewBag.Title = string.Format("Edit {0}", Model.RoleName);
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>@Model.RoleName <small>Edit role</small></h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-sm-2" style="margin: 0 0 10px">
                @Html.ActionLink("Back to List", "roles", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to roles list" })
            </div>
            <div class="col-sm-10" style="margin: 0 0 10px">
                @if (TempData["Message"] != null)
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="alert alert-success alert-dismissable">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                                <span><i class="icon fa fa-check"></i> @TempData["Message"]</span>
                            </div>
                        </div>
                    </div>
                }
                @Html.ValidationMessage("Error", new { @class = "bg-red" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header">
                        <h3 class="box-title">Role Details</h3>
                    </div>
                    <!-- form start -->
                    @using (Html.BeginForm("editrole", "manage", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="box-body">
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.RoleName)
                                <div class="form-group">
                                    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <span>@Model.RoleName</span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter description", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter order", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 no-padding">
                                    <button class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save changes">Save Changes</button>&nbsp;
                                    @Html.ActionLink("Back to List", "roles", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to roles list" })
                                </div>
                            </div>
                        </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section>
</div>
@section Scripts {
}