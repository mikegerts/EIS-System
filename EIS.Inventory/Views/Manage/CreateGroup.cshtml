@model EIS.Inventory.Models.GroupViewModel

@{
    ViewBag.ActiveMenu = "groups";
    ViewBag.Title = "Create New Group";
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>Group Information <small>Create group</small></h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-sm-2" style="margin: 0 0 10px">
                @Html.ActionLink("Back to List", "groups", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to groups list" })
            </div>
            <div class="col-sm-10" style="margin: 0 0 10px">
                @Html.ValidationMessage("Error", new { @class = "bg-red" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header">
                    </div>
                    <!-- form start -->
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="box-body">
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter group name" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter description" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Roles</label>
                                    <div class="col-md-10">
                                        <div class="row">
                                            @for (var i = 0; i < Model.RolesList.Count; i++)
                                            {
                                                <div class="col-md-4">
                                                    <div class="checkbox">
                                                        <label title="@Model.RolesList[i].Description">
                                                            <input type="hidden" value="@Model.RolesList[i].Id" name="RolesList.Id" />
                                                            <input type="checkbox" name="SelectedRoles" @string.Format("{0}", Model.RolesList[i].IsSelected ? "checked" : "") value="@Model.RolesList[i].Id" />
                                                            @Model.RolesList[i].RoleName
                                                        </label>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="box-footer">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 no-padding">
                                    <button class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save group">Save Group</button>&nbsp;
                                    @Html.ActionLink("Back to List", "groups", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to groups list" })
                                </div>
                            </div>
                        </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <link href="@Url.Content("~/content/css/iCheck/all.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        $(function () {
            //iCheck for checkbox and radio inputs
            $("input[type='checkbox']").iCheck({ checkboxClass: 'icheckbox_minimal-blue' });
        });
    </script>
}