@model EIS.Inventory.Shared.ViewModels.ProducteBayDto

<div class="row">
    <div id="" class="col-md-12">
        <div class="box box-info">
            <div class="box-header">
                <h3 class="box-title">eBay Product Details</h3>

                <span id="spnViewOnEbay" class="pull-right">
                    @if (!string.IsNullOrEmpty(Model.ItemId))
            {
                        <a href="http://www.ebay.com/itm/@Model.ItemId" class="btn btn-sm btn-info btn-flat" target="_blank">View on eBay</a>
                    }
                </span>
            </div>

            @using (Html.BeginForm("updateproductebay", "product", new { id = ViewBag.EisSKU }, FormMethod.Post, new { @id = "edit-form", @role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input type="hidden" id="EisSKU" name="EisSKU" value="@ViewBag.EisSKU" />

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IsEnabled">Is Enabled</label>
                            <div class="col-md-9">
                                @Html.CheckBoxFor(model => model.IsEnabled)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IsOutOfStockListing">Is Out of Stock Listing</label>
                            <div class="col-md-9">
                                @Html.CheckBoxFor(model => model.IsOutOfStockListing)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IsBoldTitle">Bold Title</label>
                            <div class="col-md-9">
                                @Html.CheckBoxFor(model => model.IsBoldTitle)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="IsRequireAutoPayment">Require Immediate Payment</label>
                            <div class="col-md-9">
                                @Html.CheckBoxFor(model => model.IsRequireAutoPayment)
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="ItemId">Item ID</label>
                            <div class="col-md-9">
                                <input type="text" class="form-control" placeholder="" readonly="readonly" value="@Model.ItemId" id="ItemId" name="ItemId" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Title">Product Title</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Enter product title (max 80 characters)", @maxLength = 80 } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="SubTitle">Sub Title</label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.SubTitle, new { @class = "form-control", @placeholder = "Enter product subtitle  (max 55 characters)", @maxLength = 55 })
                                @Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Description">Description</label>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="eBayCategoryName">Category</label>
                            <div class="col-md-7">
                                <input type="hidden" id="CategoryId" name="CategoryId" value="@Model.CategoryId" />
                                <input type="text" name="CategoryName" id="CategoryName" value="@Model.CategoryName" class="form-control" placeholder="Enter category ID" />
                            </div>
                            <div class="col-md-2" style="padding:0px;">
                                <a href="#suggestcategories" data-toggle="modal" data-target="#eBayCategoryDialog" class="btn btn-sm btn-info">Select Suggested...</a>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="ListingQuantity">Listing Quantity</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ListingQuantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Enter listing quantity", onfocus = "rateFieldOnFocus(this)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="SafetyQty">Safety Qty</label>
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.SafetyQty, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Safe Quantity", @id = "safetyQtyInput" } })
                            </div>
                            <input id="ovverideCheckBox" type="checkbox" name="safetyQty" value="safetyQty">Override Safety Qty<br>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="StartPrice">Start Price</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.StartPrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01", @placeholder = "Enter start price", onfocus = "rateFieldOnFocus(this)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="ReservePrice">Reserve Price</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.ReservePrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01", @placeholder = "Enter reserve price", onfocus = "rateFieldOnFocus(this)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="BinPrice">BuyItNow Price</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.BinPrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01", @placeholder = "Enter BIN price", onfocus = "rateFieldOnFocus(this)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="DispatchTimeMax">Max Dispatch Time</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.DispatchTimeMax, new { htmlAttributes = new { @class = "form-control", @type = "number", @placeholder = "Enter how many days to ship an order", onfocus = "rateFieldOnFocus(this)" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="ListType">List Type</label>
                            <div class="col-md-9">
                                <select name="ListType" class="form-control" required="required">
                                    <option value="FixedPriceItem" @(Model.ListType == "FixedPriceItem" ? "selected" : "")>FixedPriceItem </option>
                                    <option value="Auction" @(Model.ListType == "Auction" ? "selected" : "")>Auction </option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Duration">Duration</label>
                            <div class="col-md-9">
                                <select name="Duration" class="form-control" required="required">
                                    <option value="Days_1" @(Model.Duration == "Days_1" ? "selected" : "")>Days_1 </option>
                                    <option value="Days_3" @(Model.Duration == "Days_3" ? "selected" : "")>Days_3 </option>
                                    <option value="Days_5" @(Model.Duration == "Days_5" ? "selected" : "")>Days_5 </option>
                                    <option value="Days_7" @(Model.Duration == "Days_7" ? "selected" : "")>Days_7 </option>
                                    <option value="Days_10" @(Model.Duration == "Days_10" ? "selected" : "")>Days_10 </option>
                                    <option value="Days_30" @(Model.Duration == "Days_30" ? "selected" : "")>Days_30 </option>
                                    <option value="GTC" @(Model.Duration == "GTC" ? "selected" : "")>GTC </option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Condition_">Condition</label>
                            <div class="col-md-9">
                                <select id="Condition_" name="Condition_" class="form-control" required="required">
                                    <option value="1000" @(Model.Condition_ == 1000 ? "selected" : "")>New</option>
                                    <option value="1500" @(Model.Condition_ == 1500 ? "selected" : "")>New other</option>
                                    <option value="1750" @(Model.Condition_ == 1750 ? "selected" : "")>New with defects</option>
                                    <option value="2000" @(Model.Condition_ == 2000 ? "selected" : "")>Manufacturer refurbished</option>
                                    <option value="2500" @(Model.Condition_ == 2500 ? "selected" : "")>Seller refurbished</option>
                                    <option value="3000" @(Model.Condition_ == 3000 ? "selected" : "")>Used</option>
                                    <option value="4000" @(Model.Condition_ == 4000 ? "selected" : "")>Very Good</option>
                                    <option value="5000" @(Model.Condition_ == 5000 ? "selected" : "")>Good</option>
                                    <option value="6000" @(Model.Condition_ == 6000 ? "selected" : "")>Acceptable</option>
                                    <option value="7000" @(Model.Condition_ == 7000 ? "selected" : "")>For parts or not working</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3" for="Location">Location / Postal Code</label>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter item location" } })
                            </div>
                        </div>

                    </div>
                </div>

                <div class="box-footer">
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9 no-padding">
                            <button id="btn-Save" class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save changes">Save Changes</button>&nbsp;
                            @Html.ActionLink("Back to List", "index", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to products list" })
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
<script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/scripts/fancyBox-2.1.5/jquery.fancybox.pack.js")" type="text/javascript"></script>
<script>
    $(document).ready(function () {

        $("#ovverideCheckBox").on("click", function () {
            var check = $("#ovverideCheckBox").is(":checked");
            if (check) {
                $("#safetyQtyInput").attr('readonly', false)
            } else {
                $("#safetyQtyInput").attr('readonly', true)
            }
        });
    });
</script>