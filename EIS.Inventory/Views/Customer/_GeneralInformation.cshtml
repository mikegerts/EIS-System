@model EIS.Inventory.Core.ViewModels.CustomerDto
@Html.ValidationMessage("Error", new { @class = "bg-red" })
@using (Html.BeginForm("save", "customer", new { id = Model.CustomerId }, FormMethod.Post, new { @role = "form" }))
{
    <div class="box-body">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CustomerId)
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @maxlength = "11" } })
                    @Html.ValidationMessageFor(model => model.CustomerNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedCompanyId, Model.CompanyList, "-- Select company --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SelectedCompanyId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = "100" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OfficeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OfficeNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                    @Html.ValidationMessageFor(model => model.OfficeNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountTypeList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedAccountType, Model.AccountTypeList, "-- Select account type --", new { @class = "form-control", @onchange = "ShowHidePriceAttr(this.value);" })
                    @Html.ValidationMessageFor(model => model.SelectedAccountType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div style="display:none" id="divWholesalePriceAttr">
                <div class="form-group">
                    @Html.LabelFor(model => model.CostPlusBasedWholeSalePriceTypeList, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SelectedCostPlusBasedWholeSalePriceType, Model.CostPlusBasedWholeSalePriceTypeList, "-- Select cost plus based wholesale price type --", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CostPlusBasedWholeSalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="row">
                            <div class="col-md-3 no-margin">
                                @Html.EditorFor(model => model.CostPlusBasedWholeSalePrice, new { htmlAttributes = new { @class = "form-control", @maxlength = "6" } })
                                @Html.ValidationMessageFor(model => model.CostPlusBasedWholeSalePrice, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 no-margin">
                                @Html.DropDownListFor(model => model.SelectedAmountType, Model.AmountTypeList, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SelectedAmountType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CreditLimit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreditLimit, new { htmlAttributes = new { @class = "form-control", @maxlength = "6" } })
                    @Html.ValidationMessageFor(model => model.CreditLimit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreditTerms, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreditTerms, new { htmlAttributes = new { @class = "form-control", @maxlength = "5" } })
                    @Html.ValidationMessageFor(model => model.CreditTerms, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="box-footer">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 no-padding">
                <button id="btn-Save" class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save system email">Save Customer</button>&nbsp;
            </div>
        </div>
    </div>
}