@model EIS.Inventory.Core.ViewModels.SystemEmailDto

@{
    ViewBag.Title = "Create System Email";
    ViewBag.ActiveMenu = "system_email";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>System Email Information <small>Create new system email</small></h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">
                    <div class="box-header">
                        <h3 class="box-title">Create System Email</h3>
                    </div>
                    @Html.ValidationMessage("Error", new { @class = "bg-red" })
                    @using (Html.BeginForm("save", "systememail", new { id = Model.Id}, FormMethod.Post, new { @id = "edit-form", @role = "form" }))
                    {
                        <div class="box-body">
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                             
                                   <div class="form-group">
                                    <label for="SupplierSKU" class="control-label col-md-2">System Email</label>
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", @placeholder = "Enter email address", @required = "required", @maxlength = "100" })
                                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Name" class="control-label col-md-2">IsActive</label>
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsActive)
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10 no-padding">
                                    <button id="btn-Save" class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save system email">Save System Email</button>&nbsp;
                                    @Html.ActionLink("Cancel", "index", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to system email list" })
                                </div>
                            </div>
                        </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section>
</div>



@section Scripts{
@Scripts.Render("~/bundles/jqueryval")
    <link href="@Url.Content("~/content/css/iCheck/all.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#edit-form #btn-Save").on("click", function (event) {
                event.preventDefault();

                if (!isValidateForm())
                    return false;

                $("#edit-form").submit();
            });

            $("#edit-form input, #edit-form select").on("change", function () {
                $(this).parents(".form-group").removeClass("has-error");
            });

            //iCheck for checkbox and radio inputs
            $("input[type='checkbox']").iCheck({ checkboxClass: 'icheckbox_minimal-blue' });
        });
    </script>
}
