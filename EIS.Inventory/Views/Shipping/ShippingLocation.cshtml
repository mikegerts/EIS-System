@model StaticPagedList<EIS.Inventory.Shared.ViewModels.ShippingLocationDto>

@{
    ViewBag.Title = "Ship From Locations";
    ViewBag.ActiveMenu = "shipping_locations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>Ship From Locations <small>List</small></h1>
        <ol class="breadcrumb">
            <li><a href="@Html.Raw(Url.Action("index", "home"))"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#vendor_products">Shippings</a></li>
            <li><a class="active">List</a></li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-5">
                <div style="margin: 0 0 10px">
                    <a class="btn btn-sm btn-info" data-toggle="modal" data-target="#ShippingLocationDialog" href="#create">Create New Shipping Location</a>
                </div>
            </div>
            <div class="col-md-4">
                <div class="alert-warning" id="msgStatus" style="display:none;padding: 5px; border-radius: 5px"></div>
            </div>
            <div class="col-md-3">

            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="box box-info">
                    <div class="box-header">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-inline">
                                    <div class="dataTables_entries">
                                        @using (Html.BeginForm(ViewContext.RouteData.Values["action"].ToString(), "shipping", FormMethod.Get, new RouteValueDictionary { { "pageSize", Model.PageSize }, { "id", "showEntryForm" } }))
                                        {
                                            <label>
                                                Show
                                                <select id="pageSize" name="pageSize" class="form-control input-sm" onchange="return this.form.submit()">
                                                    <option value="10" @(Model.PageSize == 10 ? "selected" : "")>10</option>
                                                    <option value="50" @(Model.PageSize == 50 ? "selected" : "")>50</option>
                                                    <option value="75" @(Model.PageSize == 75 ? "selected" : "")>75</option>
                                                    <option value="100" @(Model.PageSize == 100 ? "selected" : "")>100</option>
                                                </select>
                                                entries
                                            </label>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-inline">
                                    <div class="dataTables_filter pull-right">
                                        @using (Html.BeginForm(ViewContext.RouteData.Values["action"].ToString(), "shipping", FormMethod.Get, new RouteValueDictionary { { "id", "searchForm" } }))
                                        {
                                            <label for="searchString" onclick="focusOnSearchFile()">Search:</label>
                                            <div class="input-group">
                                                <input type="text" id="searchString" name="searchString" value="@ViewBag.SearchString" title="Type here to search." placeholder="Search..." class="form-control input-sm searchField" />
                                                @Html.HiddenFor(m => m.PageSize)
                                                <span class="input-group-btn">
                                                    <button type="submit" class="btn btn-info btn-sm">Go!</button>
                                                </span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-body no-padding">
                        <div id="loadingDiv" style="display:none" class="loading-gif"></div>
                        <div id="model_list_container">
                            @{ Html.RenderPartial("_PagedShippingLocations", Model); }
                        </div>
                    </div>
                </div>
            </div>
    </section>
</div><!-- /.content-wrapper -->

@{Html.RenderPartial("_ShippingLocationDialog");}

@section Scripts {
    <link href="@Url.Content("~/content/css/iCheck/all.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/scripts/jquery.confirm.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/models/shippinglocation.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var viewModel = new ViewModel();
        var shippingLocationObj = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(new EIS.Inventory.Shared.ViewModels.ShippingLocationDto()));

        $(document).ready(function () {
            ko.applyBindings(viewModel, document.getElementById("content_main_wrapper"));

            // register some events when modal dialog is showing
            $(".modal").on("shown.bs.modal", function (event) {
                var element = $(event.relatedTarget) // element that triggered the modal
                var modelId = element.data("id");
                viewModel.loadModel(modelId);
            })
        });

    </script>
}