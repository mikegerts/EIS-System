@model EIS.Inventory.Core.ViewModels.VendorProductDto

@{
    ViewBag.Title = "Create Vendor Product";
    ViewBag.ActiveMenu = "vendor_products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>Vendor Product Information <small>Create new vendor product</small></h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">
                    <div class="box-header">
                        <h3 class="box-title">Create new vendor product</h3>
                    </div>
                    @Html.ValidationMessage("Error", new { @class = "bg-red"})
                    @using (Html.BeginForm("save", "vendorproduct", new { eisSupplierSKU = Model.EisSupplierSKU }, FormMethod.Post, new { @id = "edit-form", @role = "form" }))
                    {                        
                    <div class="box-body">
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.EisSupplierSKU)

                            <div class="form-group">
                                <label for="VendorId" class="control-label col-md-2">Vendor Name</label>
                                <div class="col-md-10">
                                    @Html.DropDownList("VendorId", (IEnumerable<SelectListItem>)ViewBag.VendorList, "-- Select vendor --", new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="SupplierSKU" class="control-label col-md-2">Supplier SKU</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SupplierSKU, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter supplier SKU", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.SupplierSKU, "", new { @class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Name" class="control-label col-md-2">Name</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter product name" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.ShortDescription, new { maxLength = 500, @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="SupplierPrice" class="control-label col-md-2">Supplier Price</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SupplierPrice, new { htmlAttributes = new { @class = "form-control", type = "number", @step = ".01", @placeholder = "Enter supplier price", onfocus = "rateFieldOnFocus(this)" } })
                                    @Html.ValidationMessageFor(model => model.SupplierPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Quantity" class="control-label col-md-2">Quantity</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter quantity", onfocus = "rateFieldOnFocus(this)" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="MinPack" class="control-label col-md-2">MinPack</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MinPack, new { htmlAttributes = new { min = 1, @class = "form-control", @placeholder = "Enter min pack", onfocus = "rateFieldOnFocus(this)" } })
                                    @Html.ValidationMessageFor(model => model.MinPack, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="UPC" class="control-label col-md-2">UPC</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UPC, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter UPC" } })
                                    @Html.ValidationMessageFor(model => model.UPC, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Category" class="control-label col-md-2">Category</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter product category" } })
                                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Weight" class="control-label col-md-2">Weight</label>
                                <div class="col-md-10">
                                    <div class="row">
                                        <div class="col-md-6 no-margin">
                                            <label class="sr-only" for="WeightUnit">Weight</label>
                                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter weight", title = "Weight" } })
                                        </div>
                                        <div class="col-md-3 no-margin">
                                            <label class="sr-only" for="AccurateWeightUnit">Mass Unit</label>
                                            <select class="form-control col-md-3" id="WeightUnit" name="WeightUnit">
                                                <option value="">-- select --</option>
                                                <option value="ounces" @(Model.WeightUnit == "ounces" ? "selected" : "")>ounces</option>
                                                <option value="pounds" @(Model.WeightUnit == "pounds" ? "selected" : "")>pounds</option>
                                                <option value="grams" @(Model.WeightUnit == "grams" ? "selected" : "")>grams</option>
                                                <option value="kilograms" @(Model.WeightUnit == "kilograms" ? "selected" : "")>kilograms</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Shipping" class="control-label col-md-2">Shipping</label>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Shipping, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter shipping" } })
                                    @Html.ValidationMessageFor(model => model.Shipping, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="VendorMOQ" class="control-label col-md-2">Vendor MOQ</label>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.VendorMOQ, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter vendor MOQ" } })
                                    @Html.ValidationMessageFor(model => model.VendorMOQ, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="VendorMOQType" class="control-label col-md-2">Vendor MOQ Type</label>
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.VendorMOQType, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter vendor MOQ type" } })
                                    @Html.ValidationMessageFor(model => model.VendorMOQType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="IsAutoLinkToEisSKU" class="control-label col-md-2">AutoLink To EisSKU</label>
                                <div class="col-md-10">
                                    @Html.CheckBoxFor(model => model.IsAutoLinkToEisSKU, new { htmlAttributes = new { @class = "form-control" } })
                                    &nbsp;
                                    <span class="help">
                                        <a class="fa fa-question-circle text-muted" data-toggle="tooltip" title="Create EIS proudct links by matching its UPC code."></a>
                                    </span>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="IsCreateEisSKUAndLink" class="control-label col-md-2">Create EisSKU & Link</label>
                                <div class="col-md-10">
                                    @Html.CheckBoxFor(model => model.IsCreateEisSKUAndLink, new { htmlAttributes = new { @class = "form-control" } })
                                    &nbsp;
                                    <span class="help">
                                        <a class="fa fa-question-circle text-muted" data-toggle="tooltip" title="Add link to EIS products with UPC code. If it doesn't exist create new EIS product."></a>
                                    </span>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="box-footer">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 no-padding">
                                <button id="btn-Save" class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save vendor product">Save Vendor Product</button>&nbsp;
                                @Html.ActionLink("Cancel", "index", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to vendor products list" })
                            </div>
                        </div>
                    </div>
                    }
                </div><!-- /.box -->
            </div>
        </div>
    </section>
</div>



@section Scripts{
    <link href="@Url.Content("~/content/css/iCheck/all.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/scripts/models/vendorproduct.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#edit-form #btn-Save").on("click", function (event) {
                event.preventDefault();

                if (!isValidateForm())
                    return false;

                $("#edit-form").submit();
            });

            $("#edit-form input, #edit-form select").on("change", function () {
                $(this).parents(".form-group").removeClass("has-error");
            });

            //iCheck for checkbox and radio inputs
            $("input[type='checkbox']").iCheck({ checkboxClass: 'icheckbox_minimal-blue' });
        });
    </script>
}
