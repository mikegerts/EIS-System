@model EIS.Inventory.Core.ViewModels.MessageTemplateDto

@{
    ViewBag.Title = "Create New Message Template";
    ViewBag.ActiveMenu = "message_templates";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper" style="min-height:349px;">
    <section class="content-header">
        <h1>Message Template Details <small>Create</small></h1>        
        <ol class="breadcrumb">
            <li><a href="@Html.Raw(Url.Action("index", "home"))"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a class="active">Message Templates</a></li>
        </ol>
    </section>
    <section class="content">
        @using (Html.BeginForm("save", "messagetemplate", FormMethod.Post, new { @id = "edit-form", @role = "form" }))
        {
            @Html.HiddenFor(x => x.Id)
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-info">
                        <div class="box-header">
                            <h3 class="box-title">Message Template Attributes</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body pad">
                            <div class="form-horizontal">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3" for="MessageTemplate">Message Type</label>
                                        <div class="col-md-9">
                                            @Html.DropDownList("MessageType", (IEnumerable<SelectListItem>)ViewBag.MessageTypeList, "-- Select message type --", new { @class = "form-control", @onchange = "messageTypeChanged(this)" })
                                            @Html.ValidationMessageFor(model => model.MessageType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3" for="Description">Description</label>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter description", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3" for="Subject">Subject</label>
                                        <div class="col-md-9">
                                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter subject", @required = "required" } })
                                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-md-3" for="IsEnabled">Is Enabled</label>
                                        <div class="col-md-9">
                                            @Html.CheckBoxFor(m => m.IsEnabled)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3" for="SystemEmailId">System Email</label>
                                        <div class="col-md-9">
                                            @Html.DropDownList("SystemEmailId", (IEnumerable<SelectListItem>)ViewBag.SystemEmailList, "-- Select system email --", new { @class = "form-control", @required = "required" })
                                            @Html.ValidationMessageFor(model => model.SystemEmailId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer no-border"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">

                    <div class="box box-info">
                        <div class="box-header">
                            <h3 class="box-title">Contents</h3>
                        </div><!-- /.box-header -->
                        <div class="box-body pad">                            
                            @Html.TextAreaFor(item => item.ContentHtml, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="box-footer no-border"></div>
                    </div>

                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <button id="btn-Save" class="btn btn-primary btn-sm" type="submit" data-toggle="tooltip" data-original-title="Save message template">Save Message Template</button>&nbsp;
                    @Html.ActionLink("Back to List", "index", null, new { @class = "btn btn-default btn-sm", @data_toggle = "tooltip", @data_original_title = "Back to message templates list" })
                </div>
            </div>
        }
    </section>
</div>
@section Scripts {    
<link href="@Url.Content("~/content/css/iCheck/all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/scripts/plugins/icheck/icheck.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/scripts/ckeditor-4.5.11-standard/ckeditor.js")"></script>
<script src="@Url.Content("~/scripts/models/messagetemplate.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        // Replace the <textarea id="editor1"> with a CKEditor
        // instance, using default configuration.
        configureeBayDescriptionCKEditor(@((int)Model.MessageType));
        CKEDITOR.replace('ContentHtml');

        //iCheck for checkbox and radio inputs
        $("input[type='checkbox']").iCheck({ checkboxClass: 'icheckbox_minimal-blue' });
    });
</script>
}